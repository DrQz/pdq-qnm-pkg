README.setup for Python

Created by NJG on Tue Oct 26 06:38:39 PDT 2004


In principal, you should just run the shell command 'make all'
in this directory and all should be well. But computers don't know 
anything about "principals".  The proof will be, does the script 'test.py' 
execute? 

Its output should appear as follows (modulo the date and version) ...

		***************************************
		****** Pretty Damn Quick REPORT *******
		***************************************
		***  of : Tue Oct 26 06:52:45 2004  ***
		***  for: Python Test Script        ***
		***  Ver: PDQ Analyzer v2.7 080202  ***
		***************************************
		***************************************
... snipped ...

		******   RESOURCE Performance   *******

Metric          Resource     Work              Value   Unit   
---------       ------       ----              -----   ----   
Throughput      Deadhorse    Flogit           0.8500   Job/Sec
Utilization     Deadhorse    Flogit          85.0000   Percent
Queue Length    Deadhorse    Flogit           5.6667   Job    
Residence Time  Deadhorse    Flogit           6.6667   Sec    
-----------------------------------------------------------------------
The latter portion is all you might see in a terminal window.

If this is not the case, look at any error messages that were issued during 
the 'make'.  Also check to see that the path to PDQ ../lib is correct in the 
'setup.py' script located in this directory. 

Then, do a 'make clean' before issuing 'make all' command again.


NOTE:

This assumes libpdq.a is available in /usr/local/lib!  [plh 2006-04-08]
Have modified setup.py to also look in ../lib for PDQ library.  [plh 2006-04-09]

You will also need to be able to run as a privileged user (root) to write
into the system site-packages directory.  If you cannot, copy the pdq.so
from build/lib.xxxxxx/ directory into, say ~/lib/python, and define
a PYTHONPATH as follows in you profile:

e.g.
  
  $ mkdir ~/lib/python
  $ cp build/lib.linux-i686-2.3/pdq.so ~/lib/python

  Now add a PYTHONPATH environment variable to your
  profile and set it to ${HOME}/lib/python.  For
  sh, ksh or bash:

     export PYTHONPATH=${HOME}/lib/python   
